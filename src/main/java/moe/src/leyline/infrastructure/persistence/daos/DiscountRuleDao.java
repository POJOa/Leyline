/**
 * This class is generated by jOOQ
 */
package moe.src.leyline.infrastructure.persistence.daos;


import java.util.List;

import javax.annotation.Generated;

import moe.src.leyline.domain.DiscountRule;
import moe.src.leyline.infrastructure.persistence.tables.DiscountRuleTable;
import moe.src.leyline.infrastructure.persistence.tables.records.DiscountRuleRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DiscountRuleDao extends DAOImpl<DiscountRuleRecord, DiscountRule, Integer> {

    /**
     * Create a new DiscountRuleDao without any configuration
     */
    public DiscountRuleDao() {
        super(DiscountRuleTable.DISCOUNT_RULE, DiscountRule.class);
    }

    /**
     * Create a new DiscountRuleDao with an attached configuration
     */
    @Autowired
    public DiscountRuleDao(Configuration configuration) {
        super(DiscountRuleTable.DISCOUNT_RULE, DiscountRule.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(DiscountRule object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<DiscountRule> fetchById(Integer... values) {
        return fetch(DiscountRuleTable.DISCOUNT_RULE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public DiscountRule fetchOneById(Integer value) {
        return fetchOne(DiscountRuleTable.DISCOUNT_RULE.ID, value);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<DiscountRule> fetchByPrice(Integer... values) {
        return fetch(DiscountRuleTable.DISCOUNT_RULE.PRICE, values);
    }

    /**
     * Fetch records that have <code>rate IN (values)</code>
     */
    public List<DiscountRule> fetchByRate(Integer... values) {
        return fetch(DiscountRuleTable.DISCOUNT_RULE.RATE, values);
    }
}
