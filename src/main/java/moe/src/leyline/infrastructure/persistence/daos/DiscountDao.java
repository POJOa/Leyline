/**
 * This class is generated by jOOQ
 */
package moe.src.leyline.infrastructure.persistence.daos;


import java.util.List;

import javax.annotation.Generated;

import moe.src.leyline.domain.Discount;
import moe.src.leyline.infrastructure.persistence.tables.DiscountTable;
import moe.src.leyline.infrastructure.persistence.tables.records.DiscountRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DiscountDao extends DAOImpl<DiscountRecord, Discount, Integer> {

    /**
     * Create a new DiscountDao without any configuration
     */
    public DiscountDao() {
        super(DiscountTable.DISCOUNT_TABLE, Discount.class);
    }

    /**
     * Create a new DiscountDao with an attached configuration
     */
    @Autowired
    public DiscountDao(Configuration configuration) {
        super(DiscountTable.DISCOUNT_TABLE, Discount.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(Discount object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<Discount> fetchById(Integer... values) {
        return fetch(DiscountTable.DISCOUNT_TABLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Discount fetchOneById(Integer value) {
        return fetchOne(DiscountTable.DISCOUNT_TABLE.ID, value);
    }

    /**
     * Fetch records that have <code>discount_rule_id IN (values)</code>
     */
    public List<Discount> fetchByDiscountRuleId(Integer... values) {
        return fetch(DiscountTable.DISCOUNT_TABLE.DISCOUNT_RULE_ID, values);
    }

    /**
     * Fetch records that have <code>coupon_id IN (values)</code>
     */
    public List<Discount> fetchByCouponId(Integer... values) {
        return fetch(DiscountTable.DISCOUNT_TABLE.COUPON_ID, values);
    }
}
